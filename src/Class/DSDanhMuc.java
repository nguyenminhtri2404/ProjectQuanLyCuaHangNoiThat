/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Class;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Triss
 */
public class DSDanhMuc {
     public Connection con;
    
    
    public ArrayList<DanhMuc> layDanhSachDanhMuc()
    {
        ArrayList<DanhMuc> ds = new ArrayList<>();
        try {
            
            
            KetNoi conn = new KetNoi();
            conn.ketNoi();
            //KetNoi();
            String sql = "Select * FROM LOAISP WHERE TRANGTHAI=0";
            Statement st = conn.ketNoi().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next())
            {
                DanhMuc n = new DanhMuc();
                n.maloai = rs.getString("MALOAI");
                n.Tenloai= rs.getString("TENLOAI");
                n.mach = rs.getString("MACH");
                ds.add(n);
 
            }
            //n.con.close();
            conn.ketNoi().close();
        } catch (SQLException ex) {
            Logger.getLogger(DSDanhMuc.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ds;
    }
    public ArrayList<DanhMuc> DanhSachNCC_Theocuahang(String mach) {
        ArrayList<DanhMuc> ds = new ArrayList<>();
        try {
            KetNoi conn = new KetNoi();
            conn.ketNoi();
            CallableStatement st = conn.ketNoi().prepareCall("{call DanhsachLoaiSP_TheoCuaHang (?)}");
            st.setString(1, mach);
            ResultSet rs = st.executeQuery();
            while(rs.next()) {
              DanhMuc n = new DanhMuc();
                n.maloai = rs.getString("MALOAI");
                n.Tenloai= rs.getString("TENLOAI");
                n.mach = rs.getString("MACH");
                ds.add(n);
            }
            conn.ketNoi().close();
        } catch (SQLException ex) {
            Logger.getLogger(DSDanhMuc.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ds;
    }
    public ArrayList<DanhMuc> timKiemDanhMuc(String giatri)
    {
        ArrayList<DanhMuc> ds = new ArrayList<>();
        try {
            
            
            KetNoi conn = new KetNoi();
            conn.ketNoi();
            //KetNoi();
//            String sql = "Select * FROM DANHMUCSP";
//            Statement st = conn.ketNoi().createStatement();
            CallableStatement st = conn.ketNoi().prepareCall("{call timKiemDanhMuc (?)}");
            st.setString(1,giatri);
            ResultSet rs = st.executeQuery();
            while(rs.next())
            {
                DanhMuc n = new DanhMuc();
                n.maloai = rs.getString("MALOAI");
                n.Tenloai= rs.getString("TENLOAI");
                n.mach = rs.getString ("MACH");
                ds.add(n);
 
            }
            //n.con.close();
            conn.ketNoi().close();
        } catch (SQLException ex) {
            Logger.getLogger(DSDanhMuc.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ds;
    }
    public String SinhMaDanhMuc() {
    String maloai = ""; // Default value

    try (Connection connection = new KetNoi().ketNoi();
         CallableStatement st = connection.prepareCall("{call sinhma_madmlonnhat}")) { // Call the stored procedure

        ResultSet rs = st.executeQuery();
        if (rs.next()) {
            String ma = rs.getString("MALOAI"); // Assuming the column name is "MAKH"
            String so = ma.substring(1);
            maloai = "L" + String.format("%02d", Integer.parseInt(so) + 1);
        }
    } catch (SQLException ex) {
        Logger.getLogger(DSDanhMuc.class.getName()).log(Level.SEVERE, "Error generating customer code", ex);
        // Optional: Throw a custom exception
    }

    return maloai;
}
    public void themDanhMuc(DanhMuc danhmuc) {
    try {
//        // Sinh mã danh mục tự động dựa vào tên danh mục
//        String autoGeneratedMaDanhMuc = generateMaDanhMuc(danhmuc.getTenDanhMuc());

        KetNoi conn = new KetNoi();
        conn.ketNoi();
        CallableStatement st = conn.ketNoi().prepareCall("{call insert_loaisp (?,?,?)}");
        st.setString(1, danhmuc.getMaloai() ); // Sử dụng mã danh mục tự động
        st.setString(2, danhmuc.getTenloai());
        st.setString(3, danhmuc.getMach());
        st.executeUpdate();
        JOptionPane.showMessageDialog(null, "Thêm thành công");
        conn.ketNoi().close();
    } catch (SQLException ex) {
        Logger.getLogger(DSDanhMuc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
//    private String generateMaDanhMuc(String tenDanhMuc) {
//    // Chuyển tên danh mục thành chữ thường và loại bỏ khoảng trắng ở đầu và cuối chuỗi
//    tenDanhMuc = tenDanhMuc.toLowerCase().trim();
//    
//    // Lấy hai ký tự đầu tiên của tên danh mục
//    String firstTwoChars = "";
//    if (tenDanhMuc.length() >= 2) {
//        firstTwoChars = tenDanhMuc.substring(0, 2);
//    } else {
//        // Nếu tên danh mục có ít hơn hai ký tự, sử dụng tên đó làm mã
//        firstTwoChars = tenDanhMuc;
//    }
//    
//    // Sinh số ngẫu nhiên có 4 chữ số
//    int randomNumber = (int) (Math.random() * 10000);
//    
//    // Ghép mã danh mục từ hai ký tự đầu tiên của tên và số ngẫu nhiên
//    String autoGeneratedMaDanhMuc = firstTwoChars + String.format("%04d", randomNumber);
//    
//    return autoGeneratedMaDanhMuc.toUpperCase(); // Chuyển thành chữ hoa và trả về
//}
    public void capNhatDanhMuc(DanhMuc danhmuc)
    {
  
         try {
             KetNoi conn = new KetNoi();
             conn.ketNoi();
             CallableStatement st = conn.ketNoi().prepareCall("{call update_DanhMuc (?,?,?)}");
             st.setString(1,danhmuc.maloai);
             st.setString(2,danhmuc.Tenloai);
             st.setString(3,danhmuc.mach);
             st.executeUpdate();
             JOptionPane.showMessageDialog(null, "Cập nhật thành công");
             conn.ketNoi().close();
         } catch (SQLException ex) {
             Logger.getLogger(DSDanhMuc.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    
    public void xoaDanhMuc(DanhMuc danhmuc)
    {
  
         try {
             KetNoi conn = new KetNoi();
             conn.ketNoi();
             CallableStatement st = conn.ketNoi().prepareCall("{call delete_DanhMuc (?)}");
             st.setString(1,danhmuc.getMaloai());
             st.executeUpdate();
             JOptionPane.showMessageDialog(null, "Xóa thành công");
             conn.ketNoi().close();
         } catch (SQLException ex) {
             Logger.getLogger(DSDanhMuc.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
}
